(defn csv-to-list
  "Converts a string of comma-separated values to a Clojure list"
  [csv]
  (read-string (str "(" csv ")")))

(defn round?
  "Returns true if a given floating point number is 'round'"
  [num]
  (== (int num) num))

(defn filter-perfect-squares
  "Takes a string of comma-separated numbers, and returns a new string of comma-separated numbers that contains only those that are perfect squares"
  [csv]
  (->> (csv-to-list csv)
       (filter #(round? (Math/sqrt %)))
       (clojure.string/join ",")))

(filter-perfect-squares "4,5,6,9")
(filter-perfect-squares "15,16,25,36,37")


;; here is the solution that can be used on 4clojure.com

(letfn [(csv-to-list [csv] (read-string (str "(" csv ")")))
        (round? [num] (== (int num) num))]
  (fn [csv]
    (->> (csv-to-list csv)
         (filter #(round? (Math/sqrt %)))
         (clojure.string/join ","))))
