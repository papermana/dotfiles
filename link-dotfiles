#!/usr/bin/env plk

(require
 '[planck.environ :refer [env]]
 '[planck.shell :refer [sh]]
 '[planck.io :as io])

(defn symlink
  [file target]
  (let [file-path (if (string? file) file (:path file))]
    (sh "ln" "-svf" file-path target)))

(defn configure-zsh
  []
  (sh "chsh" "-s" "/bin/zsh"))

(defn install-brew-packages
  []
  (let [packages ["clojure"
                  "diff-so-fancy"
                  "git"
                  "gnupg"
                  "imagemagick"
                  "leiningen"
                  "lumo"
                  "lynx"
                  "mg"
                  "mit-scheme"
                  "n"
                  "optipng"
                  "ruby"
                  "unrar"
                  "watchman"
                  "wget"
                  "yarn"
                  "zsh"
                  "zsh-completions"]]
    (for [package packages]
      (sh "brew" "install" package)))
  (configure-zsh))

(defn configure-iterm
  []
  (sh
   "defaults"
   "write com.googlecode.iterm2.plist PrefsCustomFolder -string \"$HOME/iterm2_profile\"")
  (sh
   "defaults"
   "write com.googlecode.iterm2.plist LoadPrefsFromCustomFolder -bool true"))

(defn install-brew-cask-packages
  []
  (let [packages ["emacs"
                  "iterm2"
                  "java"
                  "karabiner-elements"
                  "postman"
                  "visual-studio-code"
                  "whatsapp"]]
    (for [package packages]
      (sh "brew" "cask install" package)))
  (configure-iterm))

(defn link-home-files
  []
  (let [files (io/list-files "./home")]
    (for [file files]
      (symlink file (:home env)))))

(defn link-vscode-files
  []
  (let [settings-dir
        (str (:home env)
             "/Library/Application Support/Code/User/")]
    (symlink "./vscode/settings.json"
             settings-dir)
    (symlink "./vscode/keybindings.json"
             settings-dir)))

(defn install-vscode-extensions
  []
  (let [extensions-list ["adamwalzer.string-converter"
                         "crisward.cjsx"
                         "dbaeumer.vscode-eslint"
                         "dbankier.vscode-quick-select"
                         "esbenp.prettier-vscode"
                         "jpoissonnier.vscode-styled-components"
                         "kumar-harsh.graphql-for-vscode"
                         "mikestead.dotenv"
                         "mrmlnc.vscode-csscomb"
                         "ms-vscode.atom-keybindings"
                         "ms-vscode.Theme-TomorrowKit"
                         "ms-vsliveshare.vsliveshare"
                         "octref.vetur"
                         "oderwat.indent-rainbow"
                         "ryu1kn.partial-diff"
                         "silvenon.mdx"
                         "stkb.rewrap"
                         "waderyan.gitblame"
                         "yzhang.markdown-all-in-one"
                         "zengxingxin.sort-js-object-keys"]]
    (for [extension extensions-list]
      (sh "code" "--install-extension" extension))))

(defn -main
  []
  (install-brew-packages)
  (install-brew-cask-packages)
  (link-home-files)
  (link-vscode-files)
  (install-vscode-extensions))

(set! *main-cli-fn* -main)
